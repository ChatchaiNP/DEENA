import discord
from discord.ext import commands
from discord import app_commands
from dotenv import load_dotenv
import os
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime

from myserver import server_on

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheet ‡∏à‡∏≤‡∏Å .env
load_dotenv()

SCOPE = ['https://www.googleapis.com/auth/spreadsheets']
service_account_info = {
    "type": "service_account",
    "project_id": os.getenv("GOOGLE_PROJECT_ID"),
    "private_key_id": os.getenv("GOOGLE_PRIVATE_KEY_ID"),
    "private_key": os.getenv("GOOGLE_PRIVATE_KEY").replace("\\n", "\n"),
    "client_email": os.getenv("GOOGLE_CLIENT_EMAIL"),
    "client_id": os.getenv("GOOGLE_CLIENT_ID"),
    "auth_uri": os.getenv("GOOGLE_AUTH_URI"),
    "token_uri": os.getenv("GOOGLE_TOKEN_URI"),
    "auth_provider_x509_cert_url": os.getenv("GOOGLE_AUTH_PROVIDER_CERT_URL"),
    "client_x509_cert_url": os.getenv("GOOGLE_CLIENT_CERT_URL"),
    "universe_domain": os.getenv("GOOGLE_UNIVERSE_DOMAIN")
}

CREDS = Credentials.from_service_account_info(service_account_info, scopes=SCOPE)
GC = gspread.authorize(CREDS)

# ‚úÖ ‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ SHEET_ID ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î worksheet
SHEET_ID = os.getenv("GOOGLE_SHEET_ID")
SHEET_NAME = os.getenv("GOOGLE_SHEET_NAME")
sheet = GC.open_by_key(SHEET_ID).worksheet(SHEET_NAME)

load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Modal (‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
class QuestFormModal(discord.ui.Modal):
    def __init__(self, sheet_name, quest_title):
        super().__init__(title="‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™")
        self.sheet_name = sheet_name
        self.quest_title = quest_title
        self.player_name = discord.ui.TextInput(label="‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÇ‡∏ó‡∏©‡πÉ‡∏ô‡πÄ‡∏Å‡∏°")
        self.add_item(self.player_name)

    async def on_submit(self, interaction: discord.Interaction):
        admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
        if admin_channel:
            embed = discord.Embed(
                title="üì• ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™‡πÉ‡∏´‡∏°‡πà",
                description=(
                    f"üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÇ‡∏ó‡∏©: **{self.player_name.value}**\n"
                    f"üôã‚Äç‚ôÇÔ∏è ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á: {interaction.user.mention}\n"
                    f"üìÇ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: **{self.sheet_name}**\n"
                    f"üéØ ‡πÄ‡∏Ñ‡∏ß‡∏™: {self.quest_title}"
                ),
                color=discord.Color.blue()
            )
            discord_user = interaction.user.mention  # üëà ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠ Discord ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™
            view = ApprovalButtons(self.player_name.value, self.sheet_name, self.quest_title, discord_user)
            await admin_channel.send(embed=embed, view=view)

        confirm_embed = discord.Embed(
            title="üìã ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ !",
            description=("‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏®‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏Ñ‡∏∏‡∏°‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡∏ô‡∏ó‡∏µ !"),
            color=discord.Color.blurple()
        )
        confirm_embed.add_field(name="üìÇ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏Ñ‡∏ß‡∏™", value=self.sheet_name, inline=False)
        confirm_embed.add_field(name="üéØ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏ß‡∏™", value=self.quest_title, inline=False)

        await interaction.response.send_message(embed=confirm_embed, ephemeral=True)



# üëá ‡∏ß‡∏≤‡∏á‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å QuestFormModal (‡∏Å‡πà‡∏≠‡∏ô QuestPanelView)

class SheetSelectView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        sheets = [
            "BeginnerQuests",
            "ProcessQuests",
            "LaborQuests_Lv1",
            "LaborQuests_Lv2",
            "LaborQuests_Lv3",
            "MOONLOCK Lv.1"
        ]
        for sheet_name in sheets:
            button = SheetButton(sheet_name)

            if sheet_name == "BeginnerQuests":
                button.row = 0
            elif sheet_name == "ProcessQuests":
                button.row = 1
            elif sheet_name == "MOONLOCK Lv.1":
                button.row = 2
            elif sheet_name in ["LaborQuests_Lv1", "LaborQuests_Lv2", "LaborQuests_Lv3"]:
                button.row = 3  # ‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î (‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô)
            self.add_item(button)


class SheetButton(discord.ui.Button):
    def __init__(self, sheet_name: str):
        # üîΩ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
        if sheet_name == "BeginnerQuests":
            style = discord.ButtonStyle.primary      # üîµ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        elif sheet_name == "ProcessQuests":
            style = discord.ButtonStyle.danger       # üî¥ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ (‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢)
        elif "LaborQuests" in sheet_name:
            style = discord.ButtonStyle.success      # ‚úÖ ‡πÄ‡∏Ñ‡∏ß‡∏™‡πÅ‡∏£‡∏á‡∏á‡∏≤‡∏ô
        elif "MOONLOCK Lv.1" in sheet_name:
            style = discord.ButtonStyle.secondary    # ‚ö´ ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô
        else:
            style = discord.ButtonStyle.primary      # fallback ‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô

        # üè∑Ô∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏±‡∏î label ‡πÉ‡∏´‡πâ‡∏™‡∏∞‡∏î‡∏∏‡∏î‡∏ï‡∏≤ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
        label = {
            "BeginnerQuests": "üß≠ ‡πÄ‡∏Ñ‡∏ß‡∏™‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô",
            "ProcessQuests": "‚öôÔ∏è PROCESS",
            "LaborQuests_Lv1": "üîß ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û Lv.1",
            "LaborQuests_Lv2": "üî® ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û Lv.2",
            "LaborQuests_Lv3": "‚õèÔ∏è ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û Lv.3",
            "MOONLOCK Lv.1": "üåï MOONLOCK Lv.1"
        }.get(sheet_name, sheet_name)

        super().__init__(label=label, style=style, custom_id=f"sheet_{sheet_name}")
        self.sheet_name = sheet_name


    async def callback(self, interaction: discord.Interaction):
        rows = GC.open_by_key(SHEET_ID).worksheet(self.sheet_name).col_values(1)
        if len(rows) < 2:
            await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏ß‡∏™‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        view = discord.ui.View()
        view.add_item(QuestDropdown(self.sheet_name, rows[1:]))
        await interaction.response.send_message(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏ß‡∏™‡∏à‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ {self.sheet_name}", view=view, ephemeral=True)

class QuestDropdown(discord.ui.Select):
    def __init__(self, sheet_name, options_list):
        options = [discord.SelectOption(label=opt[:100]) for opt in options_list[:25]]
        super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", options=options, custom_id=f"dropdown_{sheet_name}")

    async def callback(self, interaction: discord.Interaction):
        selected_quest = self.values[0]
        await interaction.response.send_modal(QuestFormModal(self.custom_id.split("_", 1)[1], selected_quest))


# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á Modal
class QuestPanelView(discord.ui.View):
    @discord.ui.button(label="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™", style=discord.ButtonStyle.primary, custom_id="start_quest")
    async def start_quest_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(QuestFormModal(...))  # ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á sheet_name ‡πÉ‡∏´‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á logic ‡πÅ‡∏¢‡∏Å‡∏Å‡∏£‡∏ì‡∏µ N/A

class ApprovalButtons(discord.ui.View):
    def __init__(self, player_name, sheet_name, quest_title, submitted_by):
        super().__init__(timeout=None)
        self.player_name = player_name
        self.sheet_name = sheet_name
        self.quest_title = quest_title
        self.submitted_by = submitted_by

    @discord.ui.button(label="‚úÖ Approve", style=discord.ButtonStyle.success, custom_id="approve_button")
    async def approve(self, interaction: discord.Interaction, button: discord.ui.Button):
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        sheet.append_row([
            timestamp,
            self.player_name,
            self.sheet_name,
            self.quest_title,
            "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
            self.submitted_by
        ])

        try:
            spreadsheets = GC.open_by_key(SHEET_ID)
            worksheets = spreadsheets.worksheets()

            role_id = None
            for ws in worksheets:
                if ws.title.startswith("Role_"):
                    data = ws.get_all_values()
                    for row in data[1:]:
                        quest_key = row[0].split("(")[0].strip()
                        if quest_key == self.quest_title.split("(")[0].strip():
                            role_id = int(row[1])
                            break
                if role_id:
                    break

            if role_id:
                guild = interaction.guild
                role = guild.get_role(role_id)

                try:
                    user_id = int(self.submitted_by.strip("<@!>"))  # ‡πÅ‡∏õ‡∏•‡∏á mention ‡πÄ‡∏õ‡πá‡∏ô user_id
                    member = await guild.fetch_member(user_id)
                except Exception as e:
                    print(f"‚ùó ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
                    member = None

                if member and role:
                    # ‚úÖ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏•‡∏ö Role ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Lv3 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
                    if self.sheet_name == "LaborQuests_Lv3":
                        remove_sheets = ["Role_LaborQuests_Lv1", "Role_LaborQuests_Lv2"]
                        for sheet_title in remove_sheets:
                            try:
                                ws = spreadsheets.worksheet(sheet_title)
                                rows = ws.get_all_values()[1:]
                                for row in rows:
                                    try:
                                        old_role_id = int(row[1])
                                        old_role = discord.utils.get(guild.roles, id=old_role_id)
                                        if old_role and old_role in member.roles:
                                            await member.remove_roles(old_role)
                                            print(f"üóë ‡∏•‡∏ö Role {old_role.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å {member.display_name}")
                                    except Exception as e:
                                        print(f"‚ùó ‡∏≠‡πà‡∏≤‡∏ô Role ID ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å {sheet_title}: {e}")
                            except Exception as e:
                                print(f"‚ùó ‡∏•‡∏ö Role ‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó {sheet_title} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

                    # ‚úÖ ‡∏•‡∏ö Role ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô No_1 ‡∏ñ‡∏∂‡∏á No_4 ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö No_5
                    if self.sheet_name == "BeginnerQuests" and self.quest_title.startswith("No_5"):
                        try:
                            ws = spreadsheets.worksheet("Role_Beginner")
                            rows = ws.get_all_values()[1:]
                            for row in rows:
                                quest_label = row[0].split("(")[0].strip()
                                if quest_label.startswith("No_") and not quest_label.startswith("No_5"):
                                    try:
                                        old_role_id = int(row[1])
                                        old_role = discord.utils.get(guild.roles, id=old_role_id)
                                        if old_role and old_role in member.roles:
                                            await member.remove_roles(old_role)
                                            print(f"üóë ‡∏•‡∏ö Role {old_role.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å {member.display_name}")
                                    except Exception as e:
                                        print(f"‚ùó ‡∏≠‡πà‡∏≤‡∏ô Role ID ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Role_Beginner: {e}")
                        except Exception as e:
                            print(f"‚ùó ‡∏•‡∏ö Role ‡∏à‡∏≤‡∏Å Role_Beginner ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

                    # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Role ‡πÉ‡∏´‡∏°‡πà
                    await member.add_roles(role)
                    print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Role {role.name} ‡πÉ‡∏´‡πâ {member.display_name}")

                    # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Role ‡πÉ‡∏´‡∏°‡πà
                    await member.add_roles(role)
                    print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Role {role.name} ‡πÉ‡∏´‡πâ {member.display_name}")
                else:
                    print("‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏´‡∏£‡∏∑‡∏≠ Role")
            else:
                print("‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö Role ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏ß‡∏™")
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° Role: {e}")

        await interaction.message.edit(
            content=f"‚úÖ ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏Ç‡∏≠‡∏á {self.player_name} ({self.quest_title}) ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏î‡∏¢ {interaction.user.mention}",
            view=None
        )

        # ‚úÖ ‡∏™‡πà‡∏á DM ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
        try:
            user_id = int(self.submitted_by.strip("<@!>"))  # ‡πÅ‡∏õ‡∏•‡∏á mention ‡πÄ‡∏õ‡πá‡∏ô user_id
            member = await interaction.guild.fetch_member(user_id)
            if member:
                embed_dm = discord.Embed(
                    title="üì¨ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏Ñ‡∏ß‡∏™",
                    description=f"‚úÖ ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì `{self.quest_title}` ‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ `{self.sheet_name}` ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß",
                    color=discord.Color.green()
                )
                await member.send(embed=embed_dm)
        except Exception as e:
            print(f"‚ùó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ: {e}")

        # ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
        if admin_channel:
            await admin_channel.send(
                f"‚úÖ ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏Ç‡∏≠‡∏á **{self.player_name}**: `{self.quest_title}` ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢ {interaction.user.mention}"
            )

    @discord.ui.button(label="‚ùå Reject", style=discord.ButtonStyle.danger, custom_id="reject_button")
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        sheet.append_row([
            timestamp,
            self.player_name,
            self.sheet_name,
            self.quest_title,
            "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
            self.submitted_by
        ])

        await interaction.message.edit(
            content=f"‚ùå ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏Ç‡∏≠‡∏á {self.player_name} ({self.quest_title}) ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÇ‡∏î‡∏¢ {interaction.user.mention}",
            view=None
        )
        # ‚úÖ ‡∏™‡πà‡∏á DM ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
        try:
            user_id = int(self.submitted_by.strip("<@!>"))  # ‡πÅ‡∏õ‡∏•‡∏á mention ‡πÄ‡∏õ‡πá‡∏ô user_id
            member = await interaction.guild.fetch_member(user_id)
            if member:
                embed_dm = discord.Embed(
                    title="üì¨ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏Ñ‡∏ß‡∏™",
                    description=f"‚ùå ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì `{self.quest_title}` ‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ `{self.sheet_name}` ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò",
                    color=discord.Color.red()
                )
                await member.send(embed=embed_dm)
        except Exception as e:
            print(f"‚ùó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ: {e}")

    # ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ä‡∏ô‡πÅ‡∏ô‡∏•
        admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
        if admin_channel:
            await admin_channel.send(
                f"‚ùå ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏Ç‡∏≠‡∏á **{self.player_name}**: `{self.quest_title}` ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÇ‡∏î‡∏¢ {interaction.user.mention}"
        )

        
# ‚úÖ Sync Slash Command
GUILD_ID = 1360583634481975327  # ‚Üê ‡πÉ‡∏™‡πà Server ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
CHANNEL_ID = 1374778866903814214  # üëà ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô ID ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô Discord
ADMIN_CHANNEL_ID = 1368302479841693786  # üëà ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á

@bot.event
async def on_ready():
    print(f"‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {bot.user}")
    try:
        synced = await bot.tree.sync(guild=discord.Object(id=GUILD_ID))
        print(f"‚úÖ Slash commands synced to guild: {GUILD_ID} ({len(synced)} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á)")

        # ‚úÖ ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏° embed ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
        channel = bot.get_channel(CHANNEL_ID)
        if channel:
            view = SheetSelectView()
            embed = discord.Embed(
                title="‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à DEENA",
                description=("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ\n"
                    "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏ú‡∏π‡πâ‡∏Ñ‡∏∏‡∏°‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n"
                    "‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏ó‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                ),
                color=discord.Color.blurple()
            )
            await channel.send(embed=embed, view=view)
        else:
            print("‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö Channel ID ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô")

    except Exception as e:
        print(f"‚ùå Error syncing commands: {e}")

server_on()

bot.run(os.getenv("DISCORD_TOKEN"))
